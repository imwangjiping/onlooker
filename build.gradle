buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.9"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
        classpath "io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE"
        //jhipster-needle-gradle-buildscript-dependency - JHipster will add additional gradle build script plugins here
    }
}

group 'com.imjwong'
version = '0.0.1-SNAPSHOT'
description = ''

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
        maven { url 'https://oss.sonatype.org/content/repositories/releases' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'http://repo.maven.apache.org/maven2' }
    }
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    apply plugin: 'maven'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'war'
    apply plugin: 'propdeps'
    apply plugin: 'com.moowork.node'
    apply plugin: 'com.moowork.gulp'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'idea'

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-batch')
        compile('org.springframework.boot:spring-boot-starter-data-jpa')
        compile('org.springframework.boot:spring-boot-starter-data-redis')
        compile('org.springframework.boot:spring-boot-starter-jdbc')
        compile('org.springframework.boot:spring-boot-starter-mail')
        compile('org.springframework.boot:spring-boot-starter-mobile')
        compile('org.springframework.boot:spring-boot-starter-thymeleaf')
        compile('org.springframework.boot:spring-boot-starter-web')
//        compile('org.springframework.boot:spring-boot-starter-security')
        runtime('mysql:mysql-connector-java')
        compile "com.querydsl:querydsl-jpa:${querydsl_version}"
        compileOnly "com.querydsl:querydsl-apt:${querydsl_version}:jpa"
        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('org.springframework.batch:spring-batch-test')
    }

}

project(":app") {
    archivesBaseName = 'app'

    dependencies {
        compile project(':modules_config_core')
    }

}

project(":admin") {
    archivesBaseName = 'admin'

    dependencies {
        compile project(':app')
    }

}

project(':modules_config_core') {
    archivesBaseName = 'modules_config_core'

}